---
#Install packages
- name: Install java
  yum: pkg=java-1.6.0-openjdk state=installed
  tags:
    - java

- name: Install Maven
  yum: pkg=maven state=installed
  tags:
    - maven

- name: Install Apache
  yum: pkg={{item}} state=installed
  with_items:
    - httpd
    - php
    - php-xml
    - php-mysql
  tags:
    - apache

- name: Start Apache service
  service: name=httpd state=running enabled=yes
  tags:
    - apache

#Firewall Settings
- name: enable Firewalld
  service: name=firewalld state=started enabled=yes
  tags:
    - jenkins

- name: Configure firewalld
  firewalld: zone=public service={{item[0]}} state=enabled permanent={{item[1]}}
  with_nested:
    - [ http, https ]
    - [ true, false ]
  tags:
    - jenkins

- name: firewalld localhost
  firewalld: zone=public port=8080/tcp permanent=true state=enabled
  tags:
    - jenkins

- name: restart firewalld
  service: name=firewalld state=restarted
  tags:
    - jenkins

# Install Jenkins.
# BASED ON:https://github.com/geerlingguy/ansible-role-jenkins
# If you want to use LTS releases instead of the latest Jenkins versions, switch
# the Repo and key to the following URLs:
# repo: http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo
# key: http://pkg.jenkins-ci.org/redhat-stable/jenkins-ci.org.key
- name: Ensure Jenkins repo is installed.
  get_url: url=http://pkg.jenkins-ci.org/redhat/jenkins.repo dest=/etc/yum.repos.d/jenkins.repo
  tags:
    - jenkins

- name: Add Jenkins repo GPG key.
  rpm_key: state=present key=http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key
  tags:
    - jenkins

- name: Ensure Jenkins is installed.
  yum: pkg=jenkins state=installed
  tags:
    - jenkins

- name: Ensure Jenkins is started and runs on startup.
  service: name=jenkins state=started enabled=yes
  tags:
    - jenkins

- name: Wait for Jenkins to start up before proceeding.
  wait_for: host={{ hostname }} port=8080 timeout=300
  tags:
    - jenkins

- name: Get the jenkins-cli jarfile from the Jenkins server.
  get_url: url=http://{{ hostname }}:8080/jnlpJars/jenkins-cli.jar dest={{ jenkins_jar_location }}
  register: jarfile_get
  until: "'OK' in jarfile_get.msg or 'file already exists' in jarfile_get.msg"
  retries: 5
  delay: 5
  tags:
    - jenkins

# Jenkins doesn't allow updates via CLI, though that is required before plugins
# can be installed via CLI. See: https://gist.github.com/rowan-m/1026918
- name: Create Jenkins updates folder.
  file: path=/var/lib/jenkins/updates owner=jenkins group=jenkins mode=0755 state=directory
  tags:
    - jenkins

- name: Update Jenkins plugin data.
  shell:
    curl -L http://updates.jenkins-ci.org/update-center.json | sed '1d;$d' > /var/lib/jenkins/updates/default.json
    creates=/var/lib/jenkins/updates/default.json
  tags:
    - jenkins

- name: Permissions for default.json updates info.
  file: path=/var/lib/jenkins/updates/default.json owner=jenkins group=jenkins mode=0755
  tags:
    - jenkins

- name: Install Jenkins plugins.
  command: java -jar {{ jenkins_jar_location }} -s http://{{ hostname }}:8080/ install-plugin {{ item }} creates=/var/lib/jenkins/plugins/{{ item }}.jpi
  with_items: jenkins_plugins
  notify: restart jenkins
  tags:
    - jenkins

# - name: Setup .ssh for jenkins
#   file: 
#     path=/var/lib/jenkins/.ssh
#     owner=jenkins
#     state=directory
  
# - name: ssh-key jenkins
#   template:
#     dest=/var/lib/jenkins/.ssh/id_rsa.pub
#     src=id_rsa.pub.j2
#     owner=jenkins
#     mode=700

# - name: ssh-key private jenkins
#   template:
#     dest=/var/lib/jenkins/.ssh/id_rsa
#     src=id_rsa.j2
#     owner=jenkins
#     mode=700

- name: Setup Mavenjob
  file: 
    path=/var/lib/jenkins/jobs/{{ jenkins_maven_job_name }}
    owner=jenkins
    state=directory
  tags:
    - jenkins

- name: Configureer jobs
  template:
    dest=/var/lib/jenkins/jobs/{{ jenkins_maven_job_name }}/config.xml
    src=config.xml.j2
    owner=jenkins
  notify: restart jenkins
  tags:
    - jenkins
